# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

# TODO: Error: Couldn't detect a version for the platform 'python' in the repo.\n/bin/bash -c "oryx build /tmp/zipdeploy/extracted -o /home/site/wwwroot --platform python --platform-version 3.10 -p virtualenv_name=antenv --log-file /tmp/build-debug.log  -i /tmp/8dae86435a2e0d0 --compress-destination-dir | tee /tmp/oryx-build.log ; exit $PIPESTATUS "

name: TermHub backend - build_and_deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python version
        uses: actions/setup-python@v1
        with:
          python-version: '3.10'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
      
      - name: Install dependencies
        run: pip install -r requirements.txt

        # todo: run tests
      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)

# todo: what's this upload/download artifact bit? i don't think we need this, but curious
#      - name: Upload artifact for deployment jobs
#        uses: actions/upload-artifact@v2
#        with:
#          name: python-app
#          path: |
#            .
#            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    # TODO: need `make serve-backend` or `uvicorn backend.app:APP --reload`. But how does it know which port? will it automatically detect something is up on any port?
    steps:
#      - name: Download artifact from build job
#        uses: actions/download-artifact@v2
#        with:
#          name: python-app
#          path: .

      # TODO: remember `git submodule update`

      # TODO: create env. does this work? does this pull from environment or repo secrets? https://github.com/jhu-bids/TermHub/settings/secrets/actions
      # https://stackoverflow.com/questions/60176044/how-do-i-use-an-env-file-with-github-actions
      - name: 'Create env file'
        run: |
          mkdir env
          echo "${{ secrets.ENV_FILE }}" > env/.env

      # TODO: need to run DB initialize. i think manual steps for the DB may already be done.

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: 'termhub'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_01B978E0A1074AF5B9757FB5907ED5D2 }}
