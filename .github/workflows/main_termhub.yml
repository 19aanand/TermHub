# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions
# A good guide for Python Azure action: https://azure.github.io/AppService/2020/12/11/cicd-for-python-apps.html
# TODO: Error: Couldn't detect a version for the platform 'python' in the repo.\n/bin/bash -c "oryx build /tmp/zipdeploy/extracted -o /home/site/wwwroot --platform python --platform-version 3.10 -p virtualenv_name=antenv --log-file /tmp/build-debug.log  -i /tmp/8dae86435a2e0d0 --compress-destination-dir | tee /tmp/oryx-build.log ; exit $PIPESTATUS "
name: TermHub backend - build and deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # todo: Any way to do 3.10?
      # - attempt 1: '3.10'
      #  Error: Couldn't detect a version for the platform 'python' in the repo.\n/bin/bash -c "oryx build /tmp/zipdeploy/extracted -o /home/site/wwwroot --platform python --platform-version 3.10 -p virtualenv_name=antenv --log-file /tmp/build-debug.log  -i /tmp/8dae86435a2e0d0 --compress-destination-dir | tee /tmp/oryx-build.log ; exit $PIPESTATUS "
      # - attempt 2: 3.10
      #  Version 3.1 was not found in the local cache
      #  Error: ***[error]Version 3.1 with arch x64 not found
      #  The list of all available versions can be found here: https://raw.githubusercontent.com/actions/python-versions/main/versions-manifest.json
      - name: Set up Python version
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Create and start virtual environment
        run: |
          python3 -m venv venv
          source venv/bin/activate
      - name: Install dependencies
        run: pip install -r requirements.txt

      # TODO: create env. does this work? does this pull from environment or repo secrets? https://github.com/jhu-bids/TermHub/settings/secrets/actions
      # https://stackoverflow.com/questions/60176044/how-do-i-use-an-env-file-with-github-actions
      - name: 'Create env file'
        run: |
          mkdir env
          echo "${{ secrets.ENV_FILE }}" > env/.env
    # TODO: remember `git submodule update`. needed in build or deploy?

# todo: optional: run tests
#      - name: Run tests
#        run: python -m unittest discover -v

      # About: https://azure.github.io/AppService/2020/12/11/cicd-for-python-apps.html
      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v2
        with:
          name: python-app
          path: |
            .
            !venv/
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      # About: https://azure.github.io/AppService/2020/12/11/cicd-for-python-apps.html
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: python-app
          path: .

      # TODO: remember `git submodule update`. needed in build or deploy?

      # TODO: need to run DB initialize. i think manual steps for the DB may already be done. or we could do this locally and it could push to the prod db?

      # TODO: need `make serve-backend` or `uvicorn backend.app:APP --reload`. But how does it know which port? will it automatically detect something is up on any port?

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: 'termhub'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_01B978E0A1074AF5B9757FB5907ED5D2 }}
          package: '.'
         # package: /home/runner/work/TermHub/TermHub/python-app.zip
         
